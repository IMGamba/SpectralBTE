/************************************************

collisions.h - contains frontend for evaluating the collision operator. 

Requires weights generated by weights.h

Requires linking of conserve.h

Requires linking of momentRoutines.h

**************************************************/

#ifndef _COLLISIONS_H
#define _COLLISIONS_H

#include <stdarg.h>

/*******************
function initialize_coll
Initializes the collision routine parameters and allocates needed memory
==============
Inputs:
modes: number of velocity nodes in each direction
length: semi-length size of computational domain: [-L,L]
vel: vector of the velocity grid points
zeta: vector of the fourier space grid pts
********************/
void initialize_coll_cpu(int modes, double length, double *vel, double *zeta);

/*********************
function dealloc_coll
deallocates all dynamically allocated memory for the collisions module
 ********************/
void dealloc_coll_cpu();


//Internal routines

void find_maxwellians(double *M_mat, double *g_mat, const double *mat, const double *M_i, const double *v, const int N):

void compute_Qhat(double *f_mat, double *g_mat, double (*qHat)[2], double (*fftIn_f)[2], double (*fftOut_f)[2], double (*fftIn_g)[2], double (*fftOut_g)[2], double *v, double dv, double L_v, double *eta, double deta, double L_eta, double *wtN, int N, double scale3, int cudaFlag, int weightgenFlag, ...);


struct 

#endif
